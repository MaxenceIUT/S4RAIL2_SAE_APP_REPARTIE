--
-- PostgreSQL database dump
--

-- Dumped from database version 15.1
-- Dumped by pg_dump version 15.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: pg_database_owner
--

CREATE SCHEMA public;


--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: pg_database_owner
--

COMMENT ON SCHEMA public IS 'standard public schema';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: goodfood_assignment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.goodfood_assignment (
    table_id integer DEFAULT 0 NOT NULL,
    assignment_date date DEFAULT '1970-01-01'::date NOT NULL,
    waiter_id smallint
);


--
-- Name: goodfood_dishes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.goodfood_dishes (
    dish_id integer DEFAULT 0 NOT NULL,
    label character varying(40) DEFAULT NULL::character varying,
    type character varying(15) DEFAULT NULL::character varying,
    price numeric(6,2) DEFAULT NULL::numeric,
    quantity smallint
);


--
-- Name: goodfood_orders; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.goodfood_orders (
    reservation_id integer DEFAULT 0 NOT NULL,
    dish_id integer DEFAULT 0 NOT NULL,
    quantity smallint
);


--
-- Name: goodfood_reservations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.goodfood_reservations (
    reservation_id integer NOT NULL,
    restaurant_id bigint NOT NULL,
    table_id integer,
    reservation_date timestamp without time zone,
    people_count smallint,
    payment_date timestamp without time zone,
    payment_type character varying(15) DEFAULT NULL::character varying,
    order_price numeric(8,2) DEFAULT NULL::numeric,
    first_name text,
    last_name text,
    phone_number text
);




--
-- Name: goodfood_reservations_reservation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.goodfood_reservations ALTER COLUMN reservation_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.goodfood_reservations_reservation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: goodfood_restaurants; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.goodfood_restaurants (
    id bigint NOT NULL,
    name text NOT NULL,
    address text NOT NULL,
    latitude double precision NOT NULL,
    longitude double precision NOT NULL
);

--
-- Name: goodfood_tables; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.goodfood_tables (
    table_id integer DEFAULT 0 NOT NULL,
    seat_count smallint
);

--
-- Name: goodfood_waiter; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.goodfood_waiter (
    waiter_id smallint DEFAULT 0 NOT NULL,
    email character varying(255) DEFAULT NULL::character varying,
    password character varying(255) DEFAULT NULL::character varying,
    waiter_name character varying(25) DEFAULT NULL::character varying,
    role character varying(20) DEFAULT NULL::character varying
);

--
-- Data for Name: goodfood_assignment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.goodfood_assignment (table_id, assignment_date, waiter_id) FROM stdin;
10	2021-09-10	1
10	2021-09-11	1
11	2021-09-10	1
12	2021-09-10	1
17	2021-09-10	2
18	2021-09-10	2
15	2021-09-10	3
16	2021-09-10	3
\.

--
-- Data for Name: goodfood_dishes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.goodfood_dishes (dish_id, label, type, price, quantity) FROM stdin;
1	assiette de crudit├®s	Entr├®e	90.00	25
2	tarte de saison	Dessert	90.00	25
3	sorbet mirabelle	Dessert	90.00	35
4	filet de boeuf	Viande	90.00	62
5	salade verte	Entr├®e	90.00	15
6	chevre chaud	Entr├®e	90.00	21
7	pate lorrain	Entr├®e	90.00	25
8	saumon fum├®	Entr├®e	90.00	30
9	entrecote printaniere	Viande	90.00	58
10	gratin dauphinois	Plat	90.00	42
11	brochet ├á l'oseille	Poisson	90.00	68
12	gigot d'agneau	Viande	90.00	56
13	cr├¿me caramel	Dessert	90.00	15
14	munster au cumin	Fromage	90.00	18
15	filet de sole au beurre	Poisson	90.00	70
16	fois gras de lorraine	Entr├®e	90.00	61
\.

--
-- Data for Name: goodfood_orders; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.goodfood_orders (reservation_id, dish_id, quantity) FROM stdin;
100	3	1
100	4	2
100	5	2
100	13	1
101	2	2
101	3	2
101	7	2
101	12	2
101	15	2
101	16	2
102	1	2
102	2	1
102	3	1
102	10	2
102	14	2
103	2	1
103	3	1
103	9	2
103	14	2
104	3	1
104	7	1
104	11	1
104	14	1
105	3	2
106	3	2
\.

--
-- Data for Name: goodfood_reservations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.goodfood_reservations (reservation_id, restaurant_id, table_id, reservation_date, people_count, payment_date, payment_type, order_price, first_name, last_name, phone_number) FROM stdin;
105	0	10	2021-09-10 19:00:00	2	2021-09-10 20:45:00	Carte	\N	Ioann	MOULA	+33 7 91 82 73 04
100	0	10	2021-09-10 19:00:00	2	2021-09-10 20:50:00	Carte	\N	Fr├®d├®ric	GARGAN	+33 7 91 82 73 05
106	0	14	2021-10-11 19:00:00	2	2021-10-11 22:45:00	Carte	\N	Lucie	LUVIE	+33 7 91 82 73 06
102	0	17	2021-09-10 18:00:00	2	2021-09-10 20:55:00	Carte	\N	Julien	TABASCO	+33 7 91 82 73 07
101	0	11	2021-09-10 20:00:00	4	2021-09-10 21:20:00	Ch├¿que	\N	Tanguy	RENARD	+33 7 91 82 73 08
103	0	12	2021-09-10 19:00:00	2	2021-09-10 21:10:00	Esp├¿ces	\N	Maxence	GRAND	+33 7 91 82 73 09
104	0	18	2021-09-10 19:00:00	1	2021-09-10 21:00:00	Ch├¿que	\N	Xin	SECURITY	+33 7 91 82 73 10
\.

--
-- Data for Name: goodfood_restaurants; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.goodfood_restaurants (id, name, address, latitude, longitude) FROM stdin;
1	Vache burger	15 rue de la Primatiale, 54000 Nancy	48.6906	6.18556
2	Les petits oignons	48 Rue Jeanne d'Arc, 54000 Nancy	48.6864	6.17128
3	Angel├╣zzo	45 Rue Saint-Dizier, 54000 Nancy	48.6905	6.18286
4	Le bouche ├á oreille	42 Rue des Carmes, 54000 Nancy	48.6907	6.18099
5	Voyou	20 Rue Stanislas, 54000 Nancy	48.6931	6.18157
6	Vins et Tartines	25 Bis Rue des Ponts, 54000 Nancy	48.6885	6.18195
7	Le K	7 Rue Saint-Julien, 54000 Nancy	48.692	6.1842
\.

--
-- Data for Name: goodfood_tables; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.goodfood_tables (table_id, seat_count) FROM stdin;
10	4
11	6
12	8
13	4
14	6
15	4
16	4
17	6
18	2
19	4
\.


--
-- Data for Name: goodfood_waiter; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.goodfood_waiter (waiter_id, email, password, waiter_name, role) FROM stdin;
1	user1@mail.com	motdepasse	Tutus Peter	gestionnaire
2	user2@mail.com	motdepasse	Lilo Vito	serveur
3	user3@mail.com	$ab#;??m$$$$$2	Don Carl	serveur
4	user4@mail.com	$cd#;??m$$$$$3	Leo Jon	serveur
5	user5@mail.com	$mm#;??m$$$$$4	Dean Geak	gestionnaire
\.


--
-- Name: goodfood_reservations_reservation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.goodfood_reservations_reservation_id_seq', 1, false);


--
-- Name: goodfood_assignment goodfood_assignment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_assignment
    ADD CONSTRAINT goodfood_assignment_pkey PRIMARY KEY (table_id, assignment_date);


--
-- Name: goodfood_dishes goodfood_dishes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_dishes
    ADD CONSTRAINT goodfood_dishes_pkey PRIMARY KEY (dish_id);


--
-- Name: goodfood_orders goodfood_orders_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_orders
    ADD CONSTRAINT goodfood_orders_pkey PRIMARY KEY (reservation_id, dish_id);


--
-- Name: goodfood_reservations goodfood_reservations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_reservations
    ADD CONSTRAINT goodfood_reservations_pkey PRIMARY KEY (reservation_id);


--
-- Name: goodfood_restaurants goodfood_restaurants_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_restaurants
    ADD CONSTRAINT goodfood_restaurants_pkey PRIMARY KEY (id);


--
-- Name: goodfood_tables goodfood_tables_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_tables
    ADD CONSTRAINT goodfood_tables_pkey PRIMARY KEY (table_id);


--
-- Name: goodfood_waiter goodfood_waiter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_waiter
    ADD CONSTRAINT goodfood_waiter_pkey PRIMARY KEY (waiter_id);


--
-- Name: goodfood_assignment goodfood_assignment_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_assignment
    ADD CONSTRAINT goodfood_assignment_ibfk_1 FOREIGN KEY (table_id) REFERENCES public.goodfood_tables(table_id);


--
-- Name: goodfood_assignment goodfood_assignment_ibfk_2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_assignment
    ADD CONSTRAINT goodfood_assignment_ibfk_2 FOREIGN KEY (waiter_id) REFERENCES public.goodfood_waiter(waiter_id);


--
-- Name: goodfood_assignment goodfood_assignment_waiter_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_assignment
    ADD CONSTRAINT goodfood_assignment_waiter_id_fkey FOREIGN KEY (waiter_id) REFERENCES public.goodfood_waiter(waiter_id);


--
-- Name: goodfood_orders goodfood_orders_dish_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_orders
    ADD CONSTRAINT goodfood_orders_dish_id_fkey FOREIGN KEY (dish_id) REFERENCES public.goodfood_dishes(dish_id);


--
-- Name: goodfood_orders goodfood_orders_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goodfood_orders
    ADD CONSTRAINT goodfood_orders_ibfk_1 FOREIGN KEY (dish_id) REFERENCES public.goodfood_dishes(dish_id);